spring.datasource.url=jdbc:${DATABASE_URL_HEROKU:}
spring.datasource.username=${DATABASE_USERNAME:}
spring.datasource.password=${DATABASE_PASSWORD:}

# spring.datasource.platform=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10

# spring.thymeleaf.mode=HTML
spring.thymeleaf.prefix=classpath:/templates/
logging.level.org.springframework=INFO

# spring.profiles.active=production
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.batch.job.enabled=true
spring.jpa.hibernate.ddl-auto=update
server.port=${PORT:8082}

spring.jackson.serialization.fail-on-empty-beans=false

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


amazon.aws.s3.accesskey=${S3_ACCESS_KEY:}
amazon.aws.s3.secretkey=${S3_ACCESS_SECRET:}
amazon.aws.s3.region=${S3_REGION:}
amazon.aws.s3.bucket=${S3_BUCKET_NAME:}

local.storage.main_path=${LOCAL_STORAGE_MAIN_PATH:src/main/resources/public}
local.storage.sub_path=${LOCAL_STORAGE_SUB_PATH:}

force_s3_hosting=${FORCE_S3_HOSTING:1}

oauth.consumerKey=${oauth.consumerKey:}
oauth.consumerSecret=${oauth.consumerSecret:}
oauth.accessToken=${oauth.accessToken:}
oauth.accessTokenSecret=${oauth.accessTokenSecret:}
loggerFactory=twitter4j.StdOutLoggerFactory


spring.profiles.active=dev